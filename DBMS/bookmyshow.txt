CREATE TABLE bms_customer (
c_id INT PRIMARY KEY, 
name CHAR(30) NOT NULL, 
phone INT UNIQUE, 
country VARCHAR(20) DEFAULT 'INDIA', 
email VARCHAR(20), 
age INT CHECK(age > 12)
)

CREATE TABLE bms_hall(
h_id INT PRIMARY KEY, 
location VARCHAR(30), 
pincode INT, 
seats INT
)

CREATE TABLE bms_movie(
m_id INT PRIMARY KEY, 
movie VARCHAR(30), 
synopsis VARCHAR(255), 
rating INT CHECK(rating <= 5)
)

CREATE TABLE bms_booking(
b_id INT PRIMARY KEY, 
movie_id INT, 
hall_id INT, 
customer_id INT, 
seats INT, 
FOREIGN KEY(movie_id) REFERENCES bms_movie(m_id),
FOREIGN KEY(hall_id) REFERENCES bms_hall(h_id),
FOREIGN KEY(customer_id) REFERENCES bms_customer(c_id)
)

INSERT INTO bms_customer values(10001, 'Yash', 999999999, 'India', 'yash@gmail.com', 18)
SELECT * FROM bms_customer

INSERT INTO bms_hall VALUES(2001, 'Delhi', 110034, 100)
SELECT * FROM bms_hall

INSERT INTO bms_movie VALUES(1, 'Lord of the Rings', 'Best movie ever', 5)
SELECT * FROM bms_movie

INSERT INTO bms_movie(b_id, movie_id, hall_id, customer_id, seats) VALUES(1, 1, 2001, 10001, 100)

-------------------------

select c.name, b.seats from bms_customer c, bms_booking b where c.name = 'Yash'
select c.name, h.location from bms_customer c, bms_hall h 

create table bms_hall_room (hall_id int references bms_hall(h_id) on delete cascade, hall_no int NOT NULL)
insert into bms_hall_room values(2001, 1)
insert into bms_hall_room values(2001, 1)
delete from bms_hall where h_id = 2001
